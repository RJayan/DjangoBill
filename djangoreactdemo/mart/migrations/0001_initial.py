# Generated by Django 2.0.4 on 2018-06-14 08:09

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('email', models.EmailField(max_length=254)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_pos_employee', models.BooleanField(default=False)),
                ('is_advertiser', models.BooleanField(default=False)),
                ('is_store_manager', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Advertiser',
            fields=[
                ('advertiser', models.CharField(max_length=30, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Advertiser_ads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_of_image_or_gif', models.CharField(max_length=100)),
                ('redirected_to_link', models.CharField(max_length=100)),
                ('advertiser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mart.Advertiser')),
            ],
        ),
        migrations.CreateModel(
            name='Bought',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bought_product_name', models.CharField(max_length=30, verbose_name='bought_product_name')),
                ('bought_product_upc', models.CharField(default='not given', max_length=20, verbose_name='bought_product_upc')),
                ('bought_product_qty', models.IntegerField(default=0, verbose_name='bought_product_qty')),
                ('bought_product_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='bought_product_price')),
            ],
        ),
        migrations.CreateModel(
            name='Buyers',
            fields=[
                ('employee_id', models.CharField(max_length=30)),
                ('performance', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('unique_identifier_string', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('date_and_time_of_purchase', models.DateTimeField(auto_now_add=True, verbose_name='date_of_purchase')),
                ('customers_email', models.CharField(default='not given', max_length=50)),
                ('customers_contact_number', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ('date_and_time_of_purchase',),
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('employee', models.CharField(max_length=30, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('manager', models.CharField(max_length=30, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_upc', models.CharField(default='not given', max_length=20)),
                ('product_name', models.CharField(max_length=30)),
                ('product_stock', models.IntegerField(default=0)),
                ('product_price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='StoreManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bills', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bills', to='mart.Buyers')),
                ('manager_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mart.Manager')),
                ('products', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managers', to='mart.Products')),
            ],
        ),
        migrations.AddField(
            model_name='bought',
            name='consumer_unique_string',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyers_bought_list', to='mart.Buyers'),
        ),
    ]
